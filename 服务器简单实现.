#include<stdio.h>
#include<unistd.h>
 #include <ctype.h>
#include <netinet/in.h>
 #include <netinet/ip.h>
 #include <arpa/inet.h>
#include <sys/types.h>          /* See NOTES */
#include <sys/socket.h>
int main(void)
{
	char buf[128];
	 struct sockaddr_in serv;
	//创建通讯端点，返回该端点文件描述符;
	int s_fd=socket(AF_INET,SOCK_STREAM,0);
	if(s_fd==-1)
	{
		perror("socket");
		return -1;
	}
	//将s—fd和本地地址端口号进行绑定；
	//对serv的成员初始化;
        serv.sin_family=AF_INET;
	serv.sin_port=htons(5566);
	serv.sin_addr.s_addr=htonl(INADDR_ANY);
	int b=bind(s_fd,(struct sockaddr*)&serv,sizeof(serv));
	if(b==-1)
	{
		perror("bind");
		return -1;
	}
	//将s_fd设置为被动连接,监听客户端连接的到来；
	//将客户端到来的连接放入到未决连接队列中；
	//指定未决连接队列的长度;
	listen(s_fd,5);
	while(1)
	{
		//从s_fd设备的未决连接队列中提取一个进行处理，返回一个连接描述符，使用这个连接描述符和客户端进行通讯。
		int c_fd=accept(s_fd,NULL,NULL);
		if(c_fd==-1)
		{
			perror("accept");
			return -1;
		}
		//程序代码执行到这里，三次握手已经ok，可以进行数据的传输啦，从c_fd中读取客户端发送的过来的请求信息；
		int r=read(c_fd,buf,128);
		//处理客户端的请求信息；
		int i;
		for(i=0;i<r;i++)
		{
			buf[i]=toupper(buf[i]);
		}
		//将处理结果回送客户端
		write(c_fd,buf,r);
		//关闭本次连接;
		close(c_fd);
	}

	return 0;
}
